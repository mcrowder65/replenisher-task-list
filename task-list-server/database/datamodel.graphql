type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  name: String!
  admin: Boolean! @default(value: "false")
  tasks: [Task!]! @relation(name: "UserTasks")
  writtenNotes: [Note!]! @relation(name: "UserWrittenNotes")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Template {
  id: ID! @unique
  taskMeta: TaskMeta! @relation(name: "TemplateTaskMeta")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Task {
  id: ID! @unique
  taskMeta: TaskMeta! @relation(name: "MetaTasks")
  notes: [Note!]! @relation(name: "TaskNotes")
  user: User! @relation(name: "UserTasks")
  assigned: Boolean! @default(value: "false")
  status: Status! @default(value: "READY")
  beginDate: DateTime!
  endDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TaskMeta {
  id: ID! @unique
  title: String!
  description: String!
  priority: Priority! @default(value: "LOW")
  beginDate: DateTime!
  endDate: DateTime!
  repeat: Int! @default(value: "0")
  tasks: [Task!]! @relation(name: "MetaTasks")
  template: Template @relation(name: "TemplateTaskMeta")
}

type Note {
  id: ID! @unique
  title: String!
  text: String!
  date: DateTime!
  task: Task! @relation(name: "TaskNotes")
  author: User! @relation(name: "UserWrittenNotes")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type StatusStat {
  id: ID! @unique
  taskMeta: TaskMeta!
  newStatus: Status!
  createdAt: DateTime!
  updatedAt: DateTime!  
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  READY
  STARTED
  FINISHED
}

